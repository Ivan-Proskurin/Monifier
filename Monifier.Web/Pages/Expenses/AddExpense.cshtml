@page "{flowId:int}"
@using System.Linq
@model Expenses.AddExpenseModel

@{
    var flows = Model.Flows.Select(x => x.Name);
    var accounts = Model.Accounts.Select(x => x.Name);
    var categories = Model.Categories.Select(x => x.Name);
    var products = Model.Products.Select(x => x.Name);
}

<div class="col-md-7 left-aligned-form">
    <h3 class="form-caption-sm">
        <span>Ввод расхода</span>
    </h3>
    
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="Expense.Correction" hidden />
        <div class="row">
            <div class="form-group col-md-12 col-sm-7 col-7">
                <label asp-for="Expense.Account" class="control-label"></label>
                <autocomplete asp-for="Expense.Account" value-list="@accounts" value="@Model.Expense.Account" />
                <span asp-validation-for="Expense.Account" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12 col-sm-7 col-7">
                <label asp-for="Expense.FlowName" class="control-label"></label>
                <autocomplete asp-for="Expense.FlowName" value-list="@flows" value="@Model.Expense.FlowName" />
                <span asp-validation-for="Expense.FlowName" class="text-danger"></span>
            </div>
        </div>        
        <div class="row">
            <div class="form-group col-md-12 col-sm-7 col-7">
                <label asp-for="Expense.Category" class="control-label"></label>
                <autocomplete asp-for="Expense.Category" value="@Model.Expense.Category" value-list="@categories"
                              autocomplete="off" />
                <input type="text" name="Expense.CategoryToAdd" value="@Model.Expense.CategoryToAdd" style="display: none;" />
                <span asp-validation-for="Expense.Category" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12 col-sm-7 col-7">
                <label asp-for="Expense.Product" class="control-label"></label>
                <autocomplete asp-for="Expense.Product" value="@Model.Expense.Product" value-list="@products"
                              autocomplete="off" />
                <input type="text" name="Expense.ProductToAdd" value="@Model.Expense.ProductToAdd" style="display: none;" />
                <span asp-validation-for="Expense.Product" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-7 col-sm-7 col-7">
                <label asp-for="Expense.DateTime" class="control-label"></label>
                <date-time-picker asp-for="Expense.DateTime" value="@Model.Expense.DateTime" />
                <span asp-validation-for="Expense.DateTime" class="text-danger"></span>
            </div>
            <div class="col-md-5 col-sm-7 col-7">
                <div class="form-group">
                    <label asp-for="Expense.Cost" class="control-label"></label>
                    <input asp-for="Expense.Cost" class="form-control money-input" autocomplete="off"
                           value="@Model.Expense.Cost" />
                    <span asp-validation-for="Expense.Cost" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="form-group bottom-buttons-row">
            <input type="submit" value="Добавить расход" class="btn btn-outline-danger cursor-pointer" />
            <a asp-page="./ExpenseFlows" class="btn btn-outline-primary gapped">Отмена</a>
        </div>
    </form>
</div>

@section Scripts {
    <script type="text/javascript">
        var flowId = "@Model.Expense.FlowId";
        var urlPrefix = "/Expenses/AddExpense/" + flowId;
        var correcting = "@Model.Expense.Correction" === "True"; 
        
        activateLink("#expensesLink");

        makeInputAutocomplete("Expense.FlowName", null, updateCategoriesList);
        makeInputAutocomplete("Expense.Account");
        var categoryAutocomplete = makeInputAutocomplete("Expense.Category", null, updateProductsList);
        var productsAutocomplete = makeInputAutocomplete("Expense.Product", null, selectCategoryByProduct);
        makeInputDatetimePicker("Expense.DateTime");
        makeInputNumeric('Expense.Cost', false);
        
        function updateCategoriesList() {
            var url = urlPrefix + "?handler=getflowcategories";
            var categoryVal = $("#Expense_Category").val();
            sendAjax(url,
                $("#Expense_FlowName").val(),
                function(response) {
                    flowId = "" + response.flowId;
                    categoryAutocomplete.destroy();
                    categoryAutocomplete = makeInputAutocomplete("Expense.Category", response.categories, updateProductsList);
                    if (response.categories.indexOf(categoryVal) >= 0) {
                        $("#Expense_Category").val(categoryVal);
                    } else {
                        if (response.categories.length === 1) {
                            $("#Expense_Category").val(response.categories[0]);
                            updateProductsList();
                        } else {
                            $("#Expense_Category").val("");
                            productsAutocomplete.destroy();
                            productsAutocomplete = makeInputAutocomplete("Expense.Product", null, selectCategoryByProduct);
                            $("#Expense_Product").val("");
                        }
                    }
                });
        }

        function updateProductsList() {
            var url = urlPrefix + "?handler=getcategoryproducts";
            var productVal = $("#Expense_Product").val();
            sendAjax(url,
                $("#Expense_Category").val(),
                function(response) {
                    productsAutocomplete.destroy();
                    productsAutocomplete = makeInputAutocomplete("Expense.Product", response, selectCategoryByProduct);
                    if (response.indexOf(productVal) >= 0) {
                        $("#Expense_Product").val(productVal);
                    }
                    else
                        $("#Expense_Product").val("");
                });
        }

        function selectCategoryByProduct() {
            var url = urlPrefix + "?handler=getcategorybyproduct";
            var args = { 
                flowId: +flowId, 
                product: $("#Expense_Product").val()
            };

            sendAjax(url,
                JSON.stringify(args),
                function(response) {
                    $("#Expense_Category").val(response);
                });
        }

        $("#Expense_Category").keyup(function() {
            if (!($("#Expense_Category")).val()) {
                var url = urlPrefix + "?handler=getflowproducts";
                sendAjax(url, flowId,
                    function(response) {
                        productsAutocomplete.destroy();
                        productsAutocomplete = makeInputAutocomplete("Expense.Product", response, selectCategoryByProduct);
                    });
            }
        });

        if (correcting) {
            $("#Expense_FlowName").focus();
        } else {
            if ($("#Expense_Category").val())
                $("#Expense_Product").focus();
            else
                $("#Expense_Category").focus();
        }

    </script>
}